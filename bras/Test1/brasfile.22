puts "msg: Two targets share the same command, first has "
puts "msg: dependency which is remade by implicit rule"

puts "expect: rm -f X.o"
puts "expect: touch X.rrr Y.c"
puts "expect: touch X"
puts "expect: pattern rule .rrr->.o executed for X.rrr->X.o"
puts "expect: cp X.rrr X.o"
puts "expect: X <- X.o"
puts "expect: rm -f X.rrr Y.c X X.o"

exec rm -f X.o 
exec touch X.rrr Y.c
set c [clock seconds]; while {[clock seconds]==$c} {after 100}
exec touch X
set c [clock seconds]; while {[clock seconds]==$c} {after 100}



PatternNewer .*\.o .rrr {
  puts "pattern rule .rrr->.o executed for $deps->$target" 
  cp $trigger $target
}

Newer {X Y} {X.o Y.c} {
  ## Y.c will not be in $trigger because it is generated older than X
  puts "$target <- $trigger"
  rm -f X.rrr Y.c X X.o
}

Exist Y.c {
  puts "this should not be called because it exists"
}
