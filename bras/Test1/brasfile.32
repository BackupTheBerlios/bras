puts "msg: Two targets which meet in one rule, order of execution checked"
puts "expect: making A B"
puts "expect: making A"
puts "expect: making all <- B A"

## The intention here is to show, that targets are ultimately produced
## by their first working rule. This requires here, that target A is
## made twice. First it is made together with B, but the rule which
## makes it, is not the first which can make A. Therefore the command
## of the Exist-rule for A is also executed.


Always all {// B A} {
  puts "making $target <- $preq"
}

## Target A can be made with its first rule
Exist A {} {
  puts "making $target"
}

## Target B cannot be made with its first rule because of a missing
## prerequisite
Exist B {// a} {
  puts "making $target <- $preq"
}


## This rule knows how to make both at once.
Exist {A B} {} {
  puts "making $targets"
}

