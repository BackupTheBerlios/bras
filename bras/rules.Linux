########################################################################
##
## (Rather incomplete) system specific rules for linux
##
########################################################################
########################################################################
#
# This file is part of bras, a program similar to the (in)famous
# `make'-utitlity, written in Tcl.
#
# Copyright (C) 1996 Harald Kirsch, (kir@iitb.fhg.de)
#                    Fraunhofer Institut IITB
#                    Fraunhoferstr. 1
#                    76131 Karlsruhe
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
########################################################################

########################################################################
##
## REMEMBER: Pattern-rules entered last are considered first!!
##
########################################################################

## default settings for variables used

getenv CC cc
getenv CFLAGS {}
getenv LDFLAGS {}
getenv LDLIBS {}
getenv AR {ar r}
getenv DEPOPTS {-M -MG}

##
## How to make an object file from a dependency-file. It assumes that
## the dependency file and the source file only differ in their
## extension.
##
PatternNewer {.*\.o} .dep {
  set in [open [lindex $deps 0] r]
  set l [read $in]
  close $in
  $CC -c $CFLAGS -o $target [lindex $l 0]
}

##
## How to make a dependency file from a C source file
## 
PatternDependsFile .*\.dep .c {
  set l [eval exec "$CC $DEPOPTS $INCLUDES [lindex $deps 0]" ]
  set res {}
  foreach x $l {
    set x [string trim $x]
    if {[string match /usr/* $x]} continue
    if {[string match *: $x]} continue
    lappend res $x
  }
  set out [open $target w]
  puts $out $res
  close $out
}

##
## How to replace object files in a library
##
PatternNewer .*\.a .o {
  $AR $target $trigger
}

##
## How to make an executable from an .o-file
##
PatternNewer {[^.]*} .o {
  $CC -o $target $CFLAGS $LDFLAGS $deps $LDLIBS
}

########################################################################
##### Local Variables: #
##### mode:tcl #
##### End: #
