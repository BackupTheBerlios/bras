########################################################################
#
# This file is part of bras, a program similar to the (in)famous
# `make'-utitlity, written in Tcl.
#
# Copyright (C) 1996, 1997, 1998, 1999
#                    Harald Kirsch, (kir@iitb.fhg.de)
#                    Fraunhofer Institut IITB
#                    Fraunhoferstr. 1
#                    76131 Karlsruhe
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
########################################################################

# How to compile a .c into a .o .

getenv CC cc
getenv CFLAGS {}

########################################################################
#
# tests if target $doto is older than any of the files listed in
# dependency cache $dc. As a side-effect, the dependency
# cache is considered and brought up-to-date.
#
proc ::bras::p::dcold {doto dc} {  
  installPredicate dc

  ## First of all, the dependency cache $dc must be up-to-date
  ::bras::consider $dc

  ## The rest is trivial
  set in [open $dc r]; set dlist [join [split [read $in]]]; close $in
  return [older $doto $dlist]
}    
########################################################################
#
# Note that we derive the dependency cache (.dc) from $target
# rather than from the generated dependency $d. This makes sure that if
# the generated dependency is found along searchpath in some foreign
# directory, the .dc-file will not end up over there, but instead next 
# to the .o-file.
#
PatternMake {.*\.o} .c {[dcold $target [file root $target].dc]} {
  true $deps
  $CC -o $target -c $CFLAGS [lindex $deps 0]
}

########################################################################
##### Local Variables: #
##### mode:tcl #
##### End: #
