
			      ANNOUNCING
			     --- bras ---
		     Rule Based Command Execution

I am pleased to announce version 2.0.

WHAT'S NEW?

Every brasfile managing the built-targets of a directory now operates
in its own namespace. This should make it even more easy to use bras
for projects distributed over a large directory tree.

INCOMPATIBILITY NOTE:

The feature described above is an incompatible change over previous
versions. If, in a multi-directory project, one brasfile
refers to a global variable set in another directory's
brasfile, you will have to adapt that. Read the section about
[linkvar] and [dirns] to find out how.


STABILITY:

The new namespace encapsulation is not yet very well tested. I am not
yet sure if it really helps on multi-directory projects or if it
rather is in the way. Let me know.


WHERE CAN I GET IT?

The distribution  can be found at
   http://bras.berlios.de/


WHAT IS IT ANYWAY?

Out of frustration caused by several (mis)features of make I decided
the other day that I would like to have a tool which combines 
rule-based and script-like command execution. The result is bras. It
is written in Tcl and the rule-files it uses are also pretty much
Tcl. However, bras defines a set of new Tcl-commands which implement
rule-based command execution.

Main features are:
o rule-controlled command execution, similar to make;
o written in Tcl, no compilation required;
o Tcl-syntax so that commands associated with rules may contain
  control structures;
o dependencies in foreign directories can trigger sourcing rule files
  in that directory, recursive bras-execution is not necessary;
o just any boolean expression can be used to define when a target is
  out-of-date. 
o pattern rules which deserve the name;
o explicit invocation of the reasoning process possible;

Send comments and requests for enhancements to
kirschh@lionbioscience.com .
 
# CVS:
# $Revision: 1.16 $, $Date: 2001/12/30 09:39:22 $
