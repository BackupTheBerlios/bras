.\"
.\" This file is part of bras, a program similar to the (in)famous
.\" `make'-utitlity, written in Tcl.
.\"
.\" Copyright (C) 1996 Harald Kirsch, (kir@iitb.fhg.de)
.\"                    Fraunhofer Institut IITB
.\"                    Fraunhoferstr. 1
.\"                    76131 Karlsruhe
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.TH BRAS 1  "|VERDATE|" "Kir" "bras user's manual"

.SH NAME
bras -\ utility for rule base command execution

.SH SYNOPSIS
bras [-f brasfile] [-d] [-es] [-h] [-n] [-r] [-s] [-v] [-ve] [var=value] [--] [target ...]

.SH OPTIONS
.IP "-f brasfile"
specifies the rule-file to use.
Defaults are 
.I brasfile
and
.I Brasfile
in that order.

.IP -d
show reasoning in addition to normal processing. This option requests a
detailed description of the reasoning performed by bras and is useful
for debugging. (Up to version 0.6.0, -d suppressed the execution of any
commands. Since then the reasoning process was changed in a way that
non-execution of commands changes the results. To return exact
results, -d can no longer suppress execution of commands.)

.IP -e 
.B This option no longer exists. 
Please use the new 
.IR getenv -command
in your brasfiles to set global variables in a way which can be
overridden by the environment.

.B old:
Normally, all variables from the environment are transfered into
global variables within bras before any brasfiles are read. With 
.IR -e
you request that this happens after all brasfiles have read thereby
allowing the environment to override any variable settings in the
brasfiles. 

.IP -es
requests early sourcing.
.B (Deprecated. Please use the `include @path'
.B feature in brasfiles of subdirectories.)

With this option, 
.I bras
reads rule-files in foreign directories immediately when it encounters
an @-dependency while reading rule-files. Without this option,
rule-files in foreign directories are only read, if the @-dependency
is actually considered as a target.

In a toplevel directory, where the Brasfile contains all the necessary
definitions, e.g. for CFLAGS, you can usually do without
.IR -es ,
and it is particularly faster, if only targets from a certain
subdirectory are requested to be built. If however
.I bras
is started in a subdirectory, it may be helpful to give
.I -es
to trigger inclusion of the toplevel Brasfile. This of course only
works if your Brasfiles contain the necessary logic.


.IP -h
show usage message and exit.

.IP -n
don't execute anything. This option implies -v, but the commands shown
are only an approximation of what would happen, if -n were not given.
This is because the results of reasoning can only be complete, if
commands are executed.

.IP -r
don't read system's standard rule files. Standard rule files are
.RI |SRCBASE|/rules. system ,
where
.I system
is the content of
.IR "tcl_platform(os)" .

.IP -s
silent operation. Don't print anything except warnings and error
messages.

.IP -v
show the full list of commands which are executed.

.IP -ve
installs a verbose version of
.I exec
resulting in a log of all external commands executed. The output is
the closest approximation possible to the typical output of
`make'. However tcl-commands which are executed can only be seen with
-v.


.IP var=value
Your last chance to set environment variables, i.e. to set elements of
Tcl's global array-variable
.IR env .
Typical use of 
.I env
in brasfiles is to use the bras-specific command
.I getenv
to set a (global) variable in way that it can be overridden by the
environment. 

.SH DESCRIPTION
The utility 
.I bras
is written in Tcl and is intended to be used similar to the (in)famous
.I make
utility. A rule file, usually called
.I brasfile
contains rules describing when and how certain commands should be
executed to bring a 
.I target
up-to-date. 
.I Bras
reads the file given with option 
.I  -f
or either
.IR brasfile " or " Brasfile .
Using the rules found in the file,
.I bras 
then determines the commands which are necessary to bring the target(s)
listed on the command line up-to-date. If no target was given, the
target of the first rule found in the file is considered.

Depending on the options used, 
.I bras
executes the derived command list with different levels of verbosity,
shows its reasoning or merely shows what it would do.

.SH SEE ALSO
.nf
|DOC|/bras.tex
|DOC|/bras.ps
tcl(n)
.fi
